{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/brain-display/brain-display.component.css","webpack:///./src/app/brain-display/brain-display.component.html","webpack:///./src/app/brain-display/brain-display.component.ts","webpack:///./src/app/brain/brain.component.css","webpack:///./src/app/brain/brain.component.html","webpack:///./src/app/brain/brain.component.ts","webpack:///./src/app/course-create/course-create.component.css","webpack:///./src/app/course-create/course-create.component.html","webpack:///./src/app/course-create/course-create.component.ts","webpack:///./src/app/course-update/course-update.component.css","webpack:///./src/app/course-update/course-update.component.html","webpack:///./src/app/course-update/course-update.component.ts","webpack:///./src/app/course-view/course-view.component.css","webpack:///./src/app/course-view/course-view.component.html","webpack:///./src/app/course-view/course-view.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/log-reg/log-reg.component.css","webpack:///./src/app/log-reg/log-reg.component.html","webpack:///./src/app/log-reg/log-reg.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEO;AACoB;AACzB;AACuB;AACN;AACM;AACA;AAEhF,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,0EAAe,EAAE;IAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,QAAQ,EAAG;YACnD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAE;YAC3D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE;YACvD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAE;YAC3D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAE;SAC9D,EAAE;IACH,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;IACvD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8FAAqB,EAAE;CACnD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3B7B,mB;;;;;;;;;;;ACAA,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACe;AACpB;AAO7C;IAEI,sBACY,YAAyB,EACzB,MAAsB,EACtB,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QAJ3B,UAAK,GAAG,yBAAyB,CAAC;IAIH,CAAC;IAEhC,+BAAQ,GAAR;QACI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc,IAAK,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAChF,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACrC,CAAC;IAbQ,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAI4B,yDAAW;YACjB,8DAAc;YACb,sDAAM;OALlB,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI;AACA;AACW;AACA;AAET;AACe;AACoB;AACzB;AACiB;AACM;AACA;AACA;AAsBhF;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,0EAAe;gBACf,8FAAqB;gBACrB,qEAAc;gBACd,6FAAqB;gBACrB,uFAAmB;gBACnB,6FAAqB;gBACrB,6FAAqB;aACxB;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,0DAAW;aACd;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpCtB,mB;;;;;;;;;;;ACAA,qJAAqJ,KAAK,0DAA0D,SAAS,S;;;;;;;;;;;;;;;;;;;;;;;;ACA3K;AAOlD;IAEI;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IAID,6CAAa,GAAb,UAAc,IAAI;QACd,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;QACvC,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,OAAO,IAAI,GAAG,GAAG,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACrB,CAAC;IArBQ,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;;OACW,qBAAqB,CAuBjC;IAAD,4BAAC;CAAA;AAvBiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,mNAAmN,oBAAoB,kD;;;;;;;;;;;;;;;;;;;;;;;;;;ACArL;AACJ;AACW;AAOzD;IAEI,wBACY,YAAyB,EACzB,MAAsB,EACtB,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;IACvB,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBAwBC;QAvBG,qCAAqC;QACjC,qDAAqD;QACrD,2CAA2C;QAC3C,WAAW;QACX,6DAA6D;QAC7D,uDAAuD;QACvD,IAAI;QACR,EAAE;QACF,6CAA6C;QACzC,IAAM,SAAS,GAAG;YACd,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,UAAU;SACvB,CAAC;QACF,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACtD,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAClD,CAAC;QACL,CAAC,CAAC,CAAC;QACP,EAAE;IAEN,CAAC;IAhCQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;;SAGxB,CAAC;yCAI4B,yDAAW;YACjB,8DAAc;YACb,sDAAM;OALlB,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACO;AACO;AAGzD;IAEI,qBACY,KAAiB,EACjB,MAAsB,EACtB,OAAe;QAFf,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;IACvB,CAAC;IAEL,2BAAK,GAAL,UAAM,SAAS;QACX,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAED,8BAAQ,GAAR,UAAS,YAAY;QACjB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAED,gCAAU,GAAV,UAAW,UAAU;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,qCAAe,GAAf;QACI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IA1BQ,WAAW;QADvB,gEAAU,EAAE;yCAIU,+DAAU;YACT,8DAAc;YACb,sDAAM;OALlB,WAAW,CA2BvB;IAAD,kBAAC;CAAA;AA3BuB;;;;;;;;;;;;ACLxB,qCAAqC,gCAAgC,mBAAmB,8BAA8B,qCAAqC,mBAAmB,4BAA4B,0BAA0B,KAAK,gBAAgB,mBAAmB,KAAK,C;;;;;;;;;;;ACAjR,uVAAuV,qBAAqB,4nCAA4nC,GAAG,4cAA4c,KAAK,mjCAAmjC,aAAa,oEAAoE,cAAc,inBAAinB,UAAU,0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjoH;AAC1B;AACW;AAOzD;IAMI,yBACY,YAAyB,EACzB,MAAsB,EACtB,OAAe;QAFf,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;IACxB,CAAC;IAEJ,kCAAQ,GAAR;QACI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG;YACT,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACf,CAAC;QACF,IAAI,CAAC,YAAY,GAAG;YAChB,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,EAAE;SACnB,CAAC;IACN,CAAC;IAED,6CAAmB,GAAnB;QAAA,iBAaC;QAZG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvD,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACrC,CAAC;QAEL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAsB,GAAtB;QAAA,iBAgBC;QAfG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,UAAU,CAAC,SAAS,CAAC,cAAI;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC9B,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAE,CAAC;QACT,CAAC;IACL,CAAC;IA1DQ,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;yCAQ4B,yDAAW;YACjB,8DAAc;YACb,sDAAM;OATlB,eAAe,CA4D3B;IAAD,sBAAC;CAAA;AA5D2B;;;;;;;;;;;;ACT5B,mB;;;;;;;;;;;ACAA,uD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;;ACPlC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IACzB,oEAAc,EAAE,CAAC;AACrB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAC9C,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LogRegComponent } from './log-reg/log-reg.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { BrainComponent } from './brain/brain.component';\nimport { BrainDisplayComponent } from './brain-display/brain-display.component';\nimport { CourseViewComponent } from './course-view/course-view.component';\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseUpdateComponent } from './course-update/course-update.component';\n\nconst routes: Routes = [\n    { path: 'log-reg', component: LogRegComponent },\n    { path: 'brain', component: BrainComponent, children : [\n        { path: 'brain-display', component: BrainDisplayComponent },\n        { path: 'course-view', component: CourseViewComponent },\n        { path: 'course-create', component: CourseCreateComponent },\n        { path: 'course-update', component: CourseUpdateComponent },\n    ] },\n    { path: '', pathMatch: 'full', redirectTo: '/log-reg' },\n    { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"nav-bar\\\">\\n\\n</div>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { HttpService } from './http.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    title = 'The Outward Bound Brain';\n    constructor(\n        private _httpService: HttpService,\n        private _route: ActivatedRoute,\n        private _router: Router) { }\n\n    ngOnInit() {\n        this._route.params.subscribe((params: Params) => console.log(params['id']));\n    }\n\n    goHome() {\n        this._router.navigate(['/home']);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpService } from './http.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LogRegComponent } from './log-reg/log-reg.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { BrainComponent } from './brain/brain.component';\nimport { CourseViewComponent } from './course-view/course-view.component';\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseUpdateComponent } from './course-update/course-update.component';\nimport { BrainDisplayComponent } from './brain-display/brain-display.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LogRegComponent,\n        PageNotFoundComponent,\n        BrainComponent,\n        BrainDisplayComponent,\n        CourseViewComponent,\n        CourseCreateComponent,\n        CourseUpdateComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule\n    ],\n    providers: [HttpService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<button (click)=\\\"buildCalendar(2018)\\\">log days</button>\\n<table>\\n    <thead>\\n        <th *ngFor=\\\"let day of daysOfTheYear\\\">{{day}}</th>\\n    </thead>\\n</table>\\n<div *ngIf=\\\"cal\\\">\\n    {{cal[45]}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-brain-display',\n    templateUrl: './brain-display.component.html',\n    styleUrls: ['./brain-display.component.css']\n})\nexport class BrainDisplayComponent implements OnInit {\n    cal;\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n\n\n    buildCalendar(year) {\n        const date = new Date(year, 0, 1);\n        const end = new Date(date);\n        end.setFullYear(end.getFullYear() + 1);\n        const array = [];\n        while (date < end) {\n            console.log(date);\n            array.push(date);\n            date.setDate(date.getDate() + 1);\n        }\n\n        this.cal = array;\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"['brain-display']\\\">Brain</a> | <a [routerLink]=\\\"['course-create']\\\">Add New Course</a> | <a href=\\\"\\\" (click)=\\\"logOff()\\\">Log Out</a>\\n\\n<div style=\\\"background-color:grey; padding: 10px 25px;\\\"> \\n    <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-brain',\n    templateUrl: './brain.component.html',\n    styleUrls: ['./brain.component.css']\n})\nexport class BrainComponent implements OnInit {\n    loggedUser;\n    constructor(\n        private _httpService: HttpService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) { }\n\n    ngOnInit() {\n        // turn this on to use log reg again.\n            // if (this._httpService.retrieveLogUser() == null) {\n            //     this._router.navigate(['/log-reg']);\n            // } else {\n            //     this.loggedUser = this._httpService.retrieveLogUser();\n            //     this._router.navigate(['/brain/brain-display']);\n            // }\n        //\n        // turn this on and above off to auto log in.\n            const autoLogin = {\n                email: 'm@k.com',\n                password: 'Aa121212'\n            };\n            const observable = this._httpService.login(autoLogin);\n            observable.subscribe(data => {\n                console.log(data);\n                if (data['loggedUser']) {\n                    this.loggedUser = data['loggedUser'];\n                    this._httpService.setLogUser(this.loggedUser);\n                }\n            });\n        //\n\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  course-create works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course-create',\n  templateUrl: './course-create.component.html',\n  styleUrls: ['./course-create.component.css']\n})\nexport class CourseCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  course-update works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course-update',\n  templateUrl: './course-update.component.html',\n  styleUrls: ['./course-update.component.css']\n})\nexport class CourseUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  course-view works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course-view',\n  templateUrl: './course-view.component.html',\n  styleUrls: ['./course-view.component.css']\n})\nexport class CourseViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Injectable()\nexport class HttpService {\n    loggedUser;\n    constructor(\n        private _http: HttpClient,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) { }\n\n    login(loginUser) {\n        console.log('logging in through service');\n        return this._http.post('/loginUser', loginUser);\n    }\n\n    register(registerUser) {\n        console.log('registering through service');\n        return this._http.post('/registerUser', registerUser);\n    }\n\n    setLogUser(loggedUser) {\n        this.loggedUser = loggedUser;\n        this._router.navigate(['/brain/brain-display']);\n    }\n\n    retrieveLogUser() {\n        console.log(this.loggedUser);\n        return this.loggedUser;\n    }\n}\n","module.exports = \"#login, #register {\\r\\n    border: 3px solid black;\\r\\n    width: 40%;\\r\\n    display: inline-block;\\r\\n    padding: 10px 40px 10px 10px;\\r\\n    margin: 2%;\\r\\n    vertical-align: top;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n#login {\\r\\n    width: 30%;\\r\\n}\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n    <h1>Welcome to The NWOBS Brain!</h1>\\n    <h3>Please login or register if you haven't already</h3>\\n    <img width=\\\"300\\\" alt=\\\"OB-Logo\\\" src=\\\"https://cdn-images-1.medium.com/max/1200/1*RDNSZ_Lkvj0RlIx8KawNIw.png\\\">\\n</div>\\n\\n<div id=\\\"register\\\">\\n    <h3>Register Here</h3>\\n    {{registerUser | json}}\\n    <form (submit)=\\\"registerThroughService()\\\">\\n        <label for=\\\"registerUser.firstName\\\">First Name:\\n            <input type=\\\"text\\\" name=\\\"registerUser.firstName\\\" id=\\\"registerUser-firstName\\\" [(ngModel)]=\\\"registerUser.firstName\\\" required minlength=\\\"3\\\"\\n                #firstName=\\\"ngModel\\\">\\n        </label>\\n        <br>\\n        <p style=\\\"color:red\\\" *ngIf=\\\"firstName.errors && firstName.errors.minlength\\\">First Name needs to be longer</p>\\n        <label for=\\\"registerUser.lastName\\\">Last Name:\\n            <input type=\\\"text\\\" name=\\\"registerUser.lastName\\\" id=\\\"registerUser-lastName\\\" [(ngModel)]=\\\"registerUser.lastName\\\" required minlength=\\\"3\\\"\\n                #lastName=\\\"ngModel\\\">\\n        </label>\\n        <br>\\n        <p style=\\\"color:red\\\" *ngIf=\\\"lastName.errors && lastName.errors.minlength\\\">Last Name needs to be longer</p>\\n        <label for=\\\"registerUser.email\\\">Email:\\n            <input type=\\\"email\\\" name=\\\"registerUser.email\\\" id=\\\"registerUser-email\\\" [(ngModel)]=\\\"registerUser.email\\\" required #email=\\\"ngModel\\\"\\n                pattern=\\\"\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\\\\b\\\">\\n        </label>\\n        <br>\\n        <div style=\\\"color:red\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">That's not a valid email</div>\\n        <label for=\\\"registerUser.password\\\">Password:\\n            <input type=\\\"password\\\" name=\\\"registerUser.password\\\" id=\\\"registerUser-password\\\" [(ngModel)]=\\\"registerUser.password\\\" required\\n                minlength=\\\"8\\\" #password=\\\"ngModel\\\" pattern=\\\"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s).{8,64}$\\\">\\n            <p *ngIf=\\\"password-err\\\">Password must be at least 8 characters long.</p>\\n        </label>\\n        <br>\\n        <p style=\\\"color:red\\\" *ngIf=\\\"password.errors && password.errors.minlength\\\">Password needs to be longer</p>\\n        <p style=\\\"color:red\\\" *ngIf=\\\"password.errors && password.errors.pattern\\\">Password must have upper, lower and number</p>\\n        <label for=\\\"registerUser.passwordConf\\\">Password Confirmation:\\n            <input type=\\\"password\\\" name=\\\"registerUser.passwordConf\\\" id=\\\"registerUser-passwordConf\\\" [(ngModel)]=\\\"registerUser.passwordConf\\\"\\n                required #passwordConf=\\\"ngModel\\\">\\n        </label>\\n        <br>\\n        <p style=\\\"color:red\\\" *ngIf=\\\"registerUser.password != registerUser.passwordConf\\\">Password doesn't match confirmation.</p>\\n        <input *ngIf=\\\"firstName.valid && lastName.valid && email.valid && password.valid && passwordConf.valid\\\" type=\\\"submit\\\" value=\\\"registerUser\\\"\\n            id=\\\"registerUser-btn\\\">\\n    </form>\\n    <h3 *ngIf=\\\"responseMsg\\\" style=\\\"color: red\\\">{{responseMsg}}</h3>\\n</div>\\n\\n<div id=\\\"login\\\">\\n    <h3>Login Here</h3>\\n    {{login | json}}\\n    <form (submit)=\\\"loginThroughService()\\\">\\n        <label for=\\\"login.email\\\">Email:\\n            <input type=\\\"email\\\" name=\\\"login.email\\\" id=\\\"login-email\\\" [(ngModel)]=\\\"login.email\\\" required>\\n        </label>\\n        <br>\\n        <br>\\n        <label for=\\\"login.password\\\">Password:\\n            <input type=\\\"password\\\" name=\\\"login.password\\\" id=\\\"login-password\\\" [(ngModel)]=\\\"login.password\\\" required>\\n        </label>\\n        <br>\\n        <br>\\n        <p *ngIf=\\\"login-err\\\">Invalid Credentials</p>\\n        <input type=\\\"submit\\\" value=\\\"Login\\\" id=\\\"login-btn\\\">\\n        <p *ngIf=\\\"errorMsg\\\">{{errorMsg}}</p>\\n    </form>\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-log-reg',\n    templateUrl: './log-reg.component.html',\n    styleUrls: ['./log-reg.component.css']\n})\nexport class LogRegComponent implements OnInit {\n    login;\n    registerUser;\n    loggedInUser;\n    responseMsg;\n    errorMsg;\n    constructor(\n        private _httpService: HttpService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {}\n\n    ngOnInit() {\n        console.log('halp!');\n        this.login = {\n            email: '',\n            password: ''\n        };\n        this.registerUser = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            passwordConf: '',\n        };\n    }\n\n    loginThroughService() {\n        console.log('logging in now');\n        const observable = this._httpService.login(this.login);\n        observable.subscribe(data => {\n            console.log(data);\n            if (data['loggedUser']) {\n                this.loggedInUser = data['loggedUser'];\n                this._httpService.setLogUser(this.loggedInUser);\n            } else {\n                this.errorMsg = data['errorMsg'];\n            }\n\n        });\n    }\n\n    registerThroughService() {\n        if (this.registerUser.password === this.registerUser.passwordConf) {\n            console.log('registering now');\n            const observable = this._httpService.register(this.registerUser);\n            observable.subscribe(data => {\n                console.log(data);\n                if (data['message']) {\n                    this.responseMsg = data['message'];\n                    console.log('reg success');\n                } else if (data['error']) {\n                    this.responseMsg = data['error'];\n                    console.log('reg failed');\n                }\n            });\n        } else  {\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n"],"sourceRoot":""}